name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: deadpool
          POSTGRES_PASSWORD: deadpool
          POSTGRES_DB: deadpool
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3.8
        ports:
          - 5672:5672
        env:
          RABBITMQ_DEFAULT_USER: deadpool
          RABBITMQ_DEFAULT_PASS: deadpool
          RABBITMQ_DEFAULT_VHOST: deadpool

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Build
      run: cargo build --workspace --all-features --verbose
    - name: Run tests
      run: |
        cargo test --workspace --verbose --all-features
        cargo test --verbose --no-default-features --features managed
        cargo test --verbose --no-default-features --features managed,config
        cargo test --verbose --no-default-features --features unmanaged
        cargo test --verbose --no-default-features --features unmanaged,config
        cargo test --verbose --features rt_tokio_1
        cargo test --verbose --features rt_async-std_1
      env:
        PG__HOST: 127.0.0.1
        PG__PORT: 5432
        PG__USER: deadpool
        PG__PASSWORD: deadpool
        PG__DBNAME: deadpool
        REDIS__URL: redis://127.0.0.1/
        AMQP__URL: amqp://deadpool:deadpool@127.0.0.1/deadpool
